name: Publish to npm

on:
  push:
    tags:
      - 'v*.*.*'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty to use package.json version)'
        required: false
        type: string
      tag:
        description: 'npm tag (latest, beta, next)'
        required: false
        default: 'latest'
        type: choice
        options:
          - latest
          - beta
          - next

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Enable Corepack (Yarn 3)
        run: |
          corepack enable
          corepack prepare yarn@3.6.1 --activate

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run tests
        run: yarn test

      - name: Lint
        run: yarn lint

      - name: Typecheck
        run: yarn typecheck

      - name: Build package
        run: yarn build

      - name: Set version
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.version != '' }}
        env:
          INPUT_VERSION: ${{ inputs.version }}
        run: npm version "$INPUT_VERSION" --no-git-tag-version

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_DIST_TAG: ${{ inputs.tag }}
        run: |
          if [ "${GITHUB_EVENT_NAME}" = "workflow_dispatch" ]; then
            TAG="${NPM_DIST_TAG:-latest}"
            npm publish --tag "$TAG"
          else
            npm publish
          fi

      - name: Determine release metadata
        if: ${{ github.event_name != 'release' }}
        id: meta
        env:
          INPUT_VERSION: ${{ inputs.version }}
        run: |
          set -euo pipefail
          TAG=""
          PRERELEASE="false"
          if [ "${GITHUB_EVENT_NAME}" = "push" ]; then
            TAG="${GITHUB_REF_NAME}"
          elif [ "${GITHUB_EVENT_NAME}" = "workflow_dispatch" ]; then
            if [ -n "${INPUT_VERSION:-}" ]; then
              TAG="v${INPUT_VERSION}"
            else
              PKG_VERSION="$(node -p "require('./package.json').version")"
              TAG="v${PKG_VERSION}"
            fi
          fi
          if echo "$TAG" | grep -q -- "-"; then
            PRERELEASE="true"
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "prerelease=$PRERELEASE" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release Notes
        if: ${{ github.event_name != 'release' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          release_name: Release ${{ steps.meta.outputs.tag }}
          body: |
            ## Changes

            See [CHANGELOG.md](https://github.com/nguyenthanhan/react-native-image-code-scanner/blob/main/CHANGELOG.md) for details.
          draft: false
          prerelease: ${{ steps.meta.outputs.prerelease == 'true' }}
